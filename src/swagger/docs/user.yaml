paths:
    /user-management/sign-up:
        post:
            tags:
                - User
            summary: creates a new user
            produces:
                - application/json
            parameters:
                - in: body
                  name: sign up
                  description: It enables a user to create an account
                  required: true
                  schema:
                      $ref: "#/definitions/signUp"
            responses:
                200:
                    description: OK
    /user-management/login:
        post:
            tags:
                - User
            summary: Login User
            produces:
                - application/json
            parameters:
                - in: body
                  name: Login
                  required: true
                  schema:
                      $ref: "#/definitions/login"
            responses:
                200:
                    description: OK
    /user-management/users:
        get:
            tags:
                - User
            summary: Get all users in system
            responses:
                200:
                    description: OK
            security:
                - ApiKeyAuth: []
    /user-management/user/{id}:
        parameters:
            - in: path
              name: id
              type: integer
              description: ID of user that we want to find
              required: true
        get:
            tags:
                - User
            summary: Get user with given ID
            responses:
                200:
                    description: OK
            security:
                - ApiKeyAuth: []
        put:
            tags:
                - User
            summary: Update user with give ID
            parameters:
                - in: body
                  name: user
                  description: User with new values of properties
                  required: true
                  schema:
                      $ref: "#/definitions/updateUser"
            responses:
                200:
                    description: OK
            security:
                - ApiKeyAuth: []
    /user-management/avatar/{id}:
        parameters:
            - in: path
              name: id
              type: integer
              description: ID of user that we want to find
              required: true
        post:
            tags:
                - User
            summary: Upload avatar
            produces:
                - application/json
            parameters:
                - in: formData
                  name: dataUpload
                  type: file
                  required: true
            responses:
                200:
                    description: OK
definitions:
    signUp:
        required:
            - full_name
            - email
            - age
            - password
        properties:
            user_id:
                type: integer
                uniqueItems: true
                auto: true
            full_name:
                type: string
            email:
                type: string
                example: phongckm93@gmail.com
            age:
                type: integer
                example: 25
            pass_word:
                type: string
                example: "1234"
    updateUser:
        properties:
            full_name:
                type: string
            email:
                type: string
            age:
                type: integer
            pass_word:
                type: string
            avatar:
                type: string
    login:
        required:
            - email
            - pass_word
        properties:
            email:
                type: string
                example: phongckm93@gmail.com
            pass_word:
                type: string
                example: "1234"
securityDefinitions:
    ApiKeyAuth:
        type: apiKey
        in: header
        name: token
